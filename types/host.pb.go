// Code generated by protoc-gen-go. DO NOT EDIT.
// source: host.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	host.proto
	http_option.proto

It has these top-level messages:
	Node
	Task
	NodeStatus
	HostInfo
	HTTPOption
	HTTPJob
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Node struct {
	Info *HostInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Node) GetInfo() *HostInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type Task struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type NodeStatus struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *NodeStatus) Reset()                    { *m = NodeStatus{} }
func (m *NodeStatus) String() string            { return proto.CompactTextString(m) }
func (*NodeStatus) ProtoMessage()               {}
func (*NodeStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NodeStatus) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HostInfo struct {
	Hostname   string   `protobuf:"bytes,1,opt,name=hostname" json:"hostname,omitempty"`
	Ips        []string `protobuf:"bytes,2,rep,name=ips" json:"ips,omitempty"`
	Memory     int64    `protobuf:"varint,3,opt,name=memory" json:"memory,omitempty"`
	NumCpus    int64    `protobuf:"varint,4,opt,name=numCpus" json:"numCpus,omitempty"`
	NumPhyCpus int64    `protobuf:"varint,5,opt,name=numPhyCpus" json:"numPhyCpus,omitempty"`
	UnixTime   int64    `protobuf:"varint,6,opt,name=unixTime" json:"unixTime,omitempty"`
}

func (m *HostInfo) Reset()                    { *m = HostInfo{} }
func (m *HostInfo) String() string            { return proto.CompactTextString(m) }
func (*HostInfo) ProtoMessage()               {}
func (*HostInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *HostInfo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *HostInfo) GetIps() []string {
	if m != nil {
		return m.Ips
	}
	return nil
}

func (m *HostInfo) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *HostInfo) GetNumCpus() int64 {
	if m != nil {
		return m.NumCpus
	}
	return 0
}

func (m *HostInfo) GetNumPhyCpus() int64 {
	if m != nil {
		return m.NumPhyCpus
	}
	return 0
}

func (m *HostInfo) GetUnixTime() int64 {
	if m != nil {
		return m.UnixTime
	}
	return 0
}

func init() {
	proto.RegisterType((*Node)(nil), "ckeyer.api.Node")
	proto.RegisterType((*Task)(nil), "ckeyer.api.Task")
	proto.RegisterType((*NodeStatus)(nil), "ckeyer.api.NodeStatus")
	proto.RegisterType((*HostInfo)(nil), "ckeyer.api.HostInfo")
}

func init() { proto.RegisterFile("host.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0xa9, 0xcd, 0x74, 0x66, 0x8e, 0x1b, 0xb9, 0x88, 0x84, 0x59, 0x48, 0xe9, 0xaa, 0xab,
	0x22, 0xfa, 0x06, 0xba, 0xd1, 0x8d, 0x48, 0x9d, 0x95, 0xbb, 0xaa, 0x19, 0x26, 0x0c, 0xf9, 0xa1,
	0x49, 0xc0, 0xbe, 0x90, 0xcf, 0x29, 0xb9, 0x38, 0x63, 0x17, 0xee, 0xee, 0xc9, 0xf7, 0xe5, 0x24,
	0x5c, 0x60, 0xef, 0x42, 0xec, 0xfc, 0xe8, 0xa2, 0x23, 0x7c, 0x1c, 0xd4, 0xa4, 0xc6, 0x6e, 0xf0,
	0xba, 0xb9, 0x81, 0x78, 0x76, 0x9f, 0x8a, 0x5a, 0x08, 0x6d, 0x77, 0x4e, 0x16, 0x75, 0xd1, 0x9e,
	0xdf, 0x5e, 0x76, 0x7f, 0x4a, 0xf7, 0xe8, 0x42, 0x7c, 0xb2, 0x3b, 0xd7, 0xb3, 0xd1, 0x6c, 0x20,
	0xb6, 0x43, 0x38, 0x10, 0x41, 0xd8, 0xc1, 0x28, 0xbe, 0xb1, 0xee, 0x79, 0x6e, 0x6a, 0x20, 0xb7,
	0xbd, 0xc6, 0x21, 0xa6, 0xf0, 0xaf, 0xf1, 0x5d, 0x60, 0x75, 0x2c, 0xa4, 0x0d, 0x56, 0xf9, 0x5b,
	0x33, 0xe9, 0x94, 0xe9, 0x02, 0xa5, 0xf6, 0x41, 0x9e, 0xd5, 0x65, 0xbb, 0xee, 0xf3, 0x48, 0x57,
	0xa8, 0x8c, 0x32, 0x6e, 0x9c, 0x64, 0x59, 0x17, 0x6d, 0xd9, 0xff, 0x26, 0x92, 0x58, 0xda, 0x64,
	0x1e, 0x7c, 0x0a, 0x52, 0x30, 0x38, 0x46, 0xba, 0x06, 0x6c, 0x32, 0x2f, 0xfb, 0x89, 0xe1, 0x82,
	0xe1, 0xec, 0x24, 0xbf, 0x9f, 0xac, 0xfe, 0xda, 0x6a, 0xa3, 0x64, 0xc5, 0xf4, 0x94, 0xef, 0x97,
	0x6f, 0x8b, 0x38, 0x79, 0x15, 0xde, 0x2b, 0x5e, 0xda, 0xdd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xa5, 0x51, 0x7e, 0x21, 0x42, 0x01, 0x00, 0x00,
}
